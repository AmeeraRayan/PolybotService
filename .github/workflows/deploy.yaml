name: Polybot Deploy Prod

on:
  workflow_call:
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_HOST:
        required: true
      EC2_USERNAME:
        required: true
      TELEGRAM_BOT_TOKEN_PROD:
        required: true
      TELEGRAM_APP_URL_PROD:
        required: true
      DOCKERHUB_USERNAME: # ✅ NEW LINE [added line 20]
        required: true

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
        chmod 600 ~/.ssh/private_key
        cat > ~/.ssh/config << EOF
        Host ec2
          HostName $EC2_HOST
          User $EC2_USERNAME
          IdentityFile ~/.ssh/private_key
          StrictHostKeyChecking no
        EOF

    - name: Print debug values (no secrets)
      run: |
        echo "HOST: '${{ secrets.EC2_HOST }}'"
        echo "USERNAME: '${{ secrets.EC2_USERNAME }}'"

    - name: Copy repo to EC2
      run: |
        ssh ec2 "
          if [ -d ~/${REPO_NAME} ]; then
            cd ~/${REPO_NAME}
            git reset --hard HEAD
            git clean -fd
            git pull
          else
            git clone ${REPO_URL} ~/${REPO_NAME}
          fi
        "
        scp docker-compose.yaml ec2:~/${REPO_NAME}/docker-compose.yaml
        scp otelcol-config.yaml ec2:~/${REPO_NAME}/otelcol-config.yaml

    - name: 🔍 Debug Print image name
      run: |
        echo "Image name built from secrets: ${{ secrets.DOCKERHUB_USERNAME }}/polybot-dev:${{ github.run_number }}"

    - name: Deploy with Docker Compose
      env:
        TELEGRAM_BOT_TOKEN_PROD: ${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}
        TELEGRAM_APP_URL_PROD: ${{ secrets.TELEGRAM_APP_URL_PROD }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      run: |
        ssh ec2 "
          cd ~/${REPO_NAME}
          echo \"\"\" 
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}
          TELEGRAM_CHAT_URL=${{ secrets.TELEGRAM_APP_URL_PROD }}
          IMG_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot-prod:${{ github.run_number }}
          YOLO_URL=http://10.0.1.37:8000/predict
          S3_BUCKET_NAME=ameera-polybot-images
          TELEGRAM_CERT_FILE=prod_polybot.crt
          SQS_QUEUE_URL=https://sqs.eu-north-1.amazonaws.com/228281126655/polybot-chat-messages-prod
          STORAGE_TYPE=dynamodb
          AWS_REGION=eu-north-1
          DYNAMODB_TABLE=Predictions
          \"\"\" > .env
        
          docker compose -f docker-compose.yaml up -d
        "