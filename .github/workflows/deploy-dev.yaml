name: Polybot Deploy Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST_DEV: ${{ secrets.EC2_HOST_DEV }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
        chmod 600 ~/.ssh/private_key
        cat > ~/.ssh/config << EOF
        Host ec2
          HostName $EC2_HOST_DEV
          User $EC2_USERNAME
          IdentityFile ~/.ssh/private_key
          StrictHostKeyChecking no
        EOF

    - name: Copy repo to EC2
      run: |
        ssh ec2 "rm -rf ~/PolybotService && git clone --depth=1 --branch dev ${{ github.repositoryUrl }} ~/PolybotService"
        scp docker-compose.dev.yaml ec2:~/PolybotService/

    - name: Deploy with Docker Compose
      env:
        TELEGRAM_BOT_TOKEN_DEV: ${{ secrets.TELEGRAM_BOT_TOKEN_DEV }}
        TELEGRAM_APP_URL_DEV: ${{ secrets.TELEGRAM_APP_URL_DEV }}
        IMG_NAME: ${{ inputs.image }}
      run: |
        ssh ec2 "
          cd ~/PolybotService
        
          cat > .env << EOF
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_DEV }}
          TELEGRAM_APP_URL=${{ secrets.TELEGRAM_APP_URL_DEV }}
          IMG_NAME=${{ inputs.image }}
          YOLO_URL=http://10.0.1.67:8000/predict
          S3_BUCKET_NAME=ameera-polybot-dev-images
          TELEGRAM_CERT_FILE=polybot.crt
          EOF
        
          docker compose -f docker-compose.dev.yaml down || true
          docker compose -f docker-compose.dev.yaml pull
          docker compose -f docker-compose.dev.yaml up -d
        "